{{define "title"}}Roster{{end}}
{{define "head"}}
	{{JS "/static/js/vue.min.js"}}
	{{JS "/static/js/vue-resource.min.js"}}
{{end}}
{{define "content"}}
<div id="roster">
	<div class="page-header cloud">
		<span v-for="(group, id) in groups">
			[<a :href="'#' + id">${group.Name}</a>]
		</span>
	</div>

	<div v-for="(group, gid) in groups" class="panel panel-default">
		<div class="panel-heading" :id="gid">
			<h2 class="panel-title">${group.Name}
				<span class="pull-right">
					<span v-if="group.Squads" title="Squads"><i class="fa fa-users"></i> ${group.Squads}</span>
					<span title="People"><i class="fa fa-user-circle-o"></i> ${group.Size}</span>
				</span>
			</h2>
		</div>

		<div class="panel-body">
			<div class="container-fluid">
				<div class="row">
					<div class="col-md-2">
						<div v-for="(link, name) in group.Links">
							<i v-if="name == 'Backlog'" class="fa fa-tasks"></i>
							<i v-else-if="name == 'Mission'" class="fa fa-bullseye"></i>
							<i v-else class="fa fa-link"></i>
							<a :href="link">${name}</a>
						</div>
					</div>
					<div class="col-md-5">
						<div v-for="(role, id) in group.Head" v-if="id == 'Steward' || id == 'Product Manager'">
							<strong>${id}<span v-if="role.length > 1">s</span>:</strong>
							<a v-for="man in role" :href="'https://rover.redhat.com/people/profile/' + man.ID + '/'"> ${man.Name}</a>
						</div>
					</div>
					<div class="col-md-5">
						<div v-for="(role, id) in group.Head" v-if="id == 'User Advocate' || id == 'Team Catalyst' || id == 'Squad Lead'">
							<strong>${id}<span v-if="role.length > 1">s</span>:</strong>
							<a v-for="man in role" :href="'https://rover.redhat.com/people/profile/' + man.ID + '/'"> ${man.Name}</a>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- Group Details -->
		<table v-if="active != gid" class="table">
			<tbody>
				<tr><td>
						<button v-on:click="showDetails(gid)" class="btn btn-link form-control" type="button"><i class="fa fa-ellipsis-h fa-lg"></i></button>
				</td></tr>
			</tbody>
		</table>
		<keep-alive>
			<component v-if="active == gid" :squads="group.Squads" :is="current"></component>
		</keep-alive>
	</div>
</div>

<template id="details">
	<table id="datatable" class="table table-striped table-hover">
		<thead>
			<tr>
				<th>Full Name</th>
				<th>Role</th>
				<th v-if="squads">Squad</th>
				<th>Component</th>
				<th>IRC</th>
				<th>External</th>
				<th>Country [UTC] </th>
				<th class="no-sort">Time</th>
			</tr>
		</thead>
		<tbody>
			<tr v-if="loading"><td colspan="8" bgcolor="orange"><i class="fa fa-spinner fa-spin"></i> Loading...</td></tr>
			<tr v-for="(member, uid) in members">
				<td><a :href="'https://rover.redhat.com/people/profile/' + uid + '/'">${member.Name}</a></td>
				<td>${member.Role} <span v-if="member.CC == '667'">(QE)</span></td>
				<td v-if="squads">${member.Squad}</td>
				<td><span v-for="(data, name) in member.Data" v-if="name == 'Comp'">${data} </span></td>
				<td>${member.IRC}</td>
				<td>
					<span v-for="(link, name) in member.Data">
						<span v-if="name == 'Gtalk'"><i class="fa fa-google" title="Hangouts"></i> ${link} </span>
						<!-- span v-if="name == 'Link'"><i class="fa fa-link" title="Link"> ${link} </i></span -->
					</span>
				</td>
				<td>
					<span v-if="member.Remote">Remote</span>
					<span>${member.Country}</span>
					<span :title="member.Timezone">[${member.UTC}]</span>
				</td>
				<td>
					<clock :utcoffset="member.UTC" :tzname="member.Timezone"></clock>
				</td>
			</tr>
		</tbody>
	</table>
</template>

<template id="clock">
	<span>
		<span :title="tzname"><i class="fa fa-clock-o"></i></span>
		<span :title="date">${time}</span>
	</span>
</template>

<script type="text/javascript">
	Vue.component('clock', {
		delimiters: ['${', '}'],
		template: "#clock",
		props: ['utcoffset', 'tzname'],
		data: function () {
			return {
				time: '',
				date: ''
			}
		},
		methods: {
			calcTime: function () {
				var d = new Date()
				var utc = d.getTime() + (d.getTimezoneOffset() * 60000)
				var nd = new Date(utc + (3600000*this.utcoffset))
				var options_time = { hour: 'numeric', minute: 'numeric', second: 'numeric' }
				var options_date = { month: 'short', day: 'numeric', year: 'numeric' }
				this.time = Intl.DateTimeFormat('en-US', options_time).format(nd)
				this.date = Intl.DateTimeFormat('en-US', options_date).format(nd)
			}
		},
		mounted: function() {
			this.interval = setInterval(this.calcTime, 1000)
		},
		beforeDestroy: function() {
			clearInterval(this.interval)
		}
	})

	Vue.component('groupDetails', {
		delimiters: ['${', '}'],
		template: "#details",
		props: ['squads'],
		data: function () {
			return {
				 members: {},
				 loading: true
			}
		},
		mounted: function () {
			this.$http.get('/roster/v1/members/'+this.$parent.active).then(function(response) {
				this.members = response.body
				this.loading = false
			})
		},
		updated: function() {
			$('#datatable').DataTable({
				searching: false,
				paging: false,
				info: false,
				'sDom': 't',
				"columnDefs": [{
					"targets": 'no-sort',
					"orderable": false,
					}]
				});
		}
	})

	let roster = new Vue({
		el: '#roster',
		delimiters: ['${', '}'],
		data: {
			groups: [],
			current: "groupDetails",
			active: ""
		},
		mounted: function() {
			this.$http.get('/roster/v1/groups').then(function(response) {
				this.groups = response.body
			})
		},
		methods: {
			showDetails: function (group) {
				this.active = group
			},
		}
	});
</script>

{{JS "/static/js/jquery.dataTables.min.js"}}
{{template "footer" .}}{{end}}
{{define "foot"}}{{end}}