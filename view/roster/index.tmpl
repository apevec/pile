{{define "title"}}Roster{{end}}
{{define "head"}}
	{{JS "/static/js/vue.min.js"}}
	{{JS "/static/js/vue-resource.min.js"}}
{{end}}
{{define "content"}}

<div id="roster">

	<div class="page-header">
		<span v-for="(group, gid) in groups">
			[<a :href="'#' + gid">${group}</a>]
		</span>
	</div>

	<div v-for="(group, gid) in groups" class="panel panel-default">

		<group-info :gid="gid" :group="group"></group-info>

		<keep-alive>
			<group-details v-if="active == gid" :gid="gid"></group-details>
		</keep-alive>

		<button v-if="active != gid" v-on:click="showDetails(gid)" class="btn btn-default pull-right form-control" type="button">
			<i class="fa fa-chevron-down"></i>
		</button>

		<!-- this makes details button to be within the panel, otherwise it drops under -->
		<div class="clearfix"></div>

	</div>

</div>

<template id="tz">
	<span>
		<span v-if="tz.remote === 'true'">Remote</span>
		<span>${country}</span>
		<span>[${tz.utcOffset}]</span>
	</span>
</template>
<template id="clock">
	<span>
		<span :title="tz.tzName"><i class="fa fa-clock-o"></i></span>
		<span :title="title">${time}</span>
	</span>
</template>

<template id="group-details">
	<table id="datatable" class="table table-striped table-hover">
		<thead>
			<tr>
				<th>Full Name</th>
				<th>Role</th>
				<th v-if="squads">Squad</th>
				<th>Component</th>
				<th>IRC</th>
				<th>External</th>
				<th>Location [UTC]</th>
				<th class="no-sort">Time</th>
			</tr>
		</thead>
		<tbody>
			<tr v-for="(member, uid) in members">
				<td>
					<a :href="'https://rover.redhat.com/people/profile/' + uid + '/'">${member.Name}</a>
				</td>
				<td>${member.Role} <span v-if="member.CC == '667'">(QE)</span></td>
				<td v-if="squads">${member.Squad}</td>
				<td><span v-for="(data, name) in member.Data" v-if="name == 'Comp'">${data} </span></td>
				<td>${member.IRC}</td>
				<td>
					<span v-for="(link, name) in member.Data">
						<span v-if="name == 'Gtalk'"><i class="fa fa-google" title="Hangouts"></i> ${link} </span>
						<!-- span v-if="name == 'Link'"><i class="fa fa-link" title="Link"> ${link} </i></span -->
					</span>
				</td>
				<td>
					<tz :uid="uid" :country="member.Country"></tz>
				</td>
				<td>
					<clock :uid="uid"></clock>
				</td>
			</tr>
		</tbody>
	</table>
</template>

<template id="group-info">
<div class="panel-default">
	<div :id="gid" class="panel-heading">
		<h2 class="panel-title">
			<span>${group}</span>
			<span class="pull-right">
				<span v-if="groupsize.squads" title="Squads"><i class="fa fa-users"></i> ${groupsize.squads}</span>
				<span title="People"><i class="fa fa-user-circle-o"></i> ${groupsize.people}</span>
			</span>
		</h2>
	</div>
	<div class="panel-body">
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-2">
					<div v-for="(link, name) in grouplinks">
						<i v-if="name == 'Backlog'" class="fa fa-tasks"></i>
						<i v-else-if="name == 'Mission'" class="fa fa-bullseye"></i>
						<i v-else class="fa fa-link"></i>
						<a :href="link">${name}</a>
					</div>
				</div>
				<div class="col-md-5">
					<div v-for="(role, id) in grouphead" v-if="id == 'Steward' || id == 'Product Manager'">
						<strong>${id}<span v-if="role.length > 1">s</span>:</strong>
						<a v-for="man in role" :href="'https://rover.redhat.com/people/profile/' + man.ID + '/'"> ${man.Name}</a>
					</div>
				</div>
				<div class="col-md-5">
					<div v-for="(role, id) in grouphead" v-if="id == 'User Advocate' || id == 'Team Catalyst' || id == 'Squad Lead'">
						<strong>${id}<span v-if="role.length > 1">s</span>:</strong>
						<a v-for="man in role" :href="'https://rover.redhat.com/people/profile/' + man.ID + '/'"> ${man.Name}</a>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
</template>

<script type="text/javascript">
	var GroupDetailsClockTZ = Vue.extend({
		delimiters: ['${', '}'],
		props: ['uid'],
		data: function() {
			return {
				tz: [],
			};
		},
		mounted: function() {
			this.$http.get('api/v2/people/' + this.uid + '/tz').then(function(response) {
				this.tz = response.body
			});
		},
	});
	var GroupDetailsClock = GroupDetailsClockTZ.extend({
		template: '#clock',
		data: function() {
			return {
				time: '',
				date: '',
			};
		},
		computed: {
			title: function() {
				return this.date + '\n'
					 + this.tz.tzName + '\n'
					 + 'UTC' + this.tz.utcOffset;
			},
		},
		methods: {
			calcTime: function () {
				var d = new Date();
				var utc = d.getTime() + (d.getTimezoneOffset() * 60000);
				var nd = new Date(utc + (3600000 * this.tz.utcOffset));
				var options_time = { hour: 'numeric', minute: 'numeric', second: 'numeric' };
				var options_date = { month: 'short', day: 'numeric', year: 'numeric' };
				this.time = Intl.DateTimeFormat('en-US', options_time).format(nd);
				this.date = Intl.DateTimeFormat('en-US', options_date).format(nd);
			},
		},
		mounted: function() {
			this.interval = setInterval(this.calcTime, 1000);
		},
		beforeDestroy: function() {
			clearInterval(this.interval);
		},
	});
	var GroupDetailsTZ = GroupDetailsClockTZ.extend({
		template: '#tz',
		props: ['country'],
		mounted: function() {
			return
		},
	});

	var GroupDetails = {
		template: '#group-details',
		delimiters: ['${', '}'],
		props: ['gid'],
		data: function() {
			return {
				members: [],
			};
		},
		computed: {
			squads: function() {
				for (uid in this.members) {
					if (this.members[uid].Squad != '') return true;
				};
				return false;
			},
		},
		mounted: function() {
			this.$http.get('api/v2/groups/' + this.gid + '/members').then(function(response) {
				this.members = response.body
			});
		},
		updated: function() {
			$('#datatable').DataTable({
				searching: false,
				paging: false,
				info: false,
				'sDom': 't',
				"columnDefs": [{
					"targets": 'no-sort',
					"orderable": false,
					}]
				});
		},
		components: {
			'clock': GroupDetailsClock,
			'tz': GroupDetailsTZ,
		},
	};

	var GroupInfo = {
		template: '#group-info',
		delimiters: ['${', '}'],
		props: ['gid', 'group'],
		data: function() {
			return {
				grouphead: [],
				grouplinks: [],
				groupsize: [],
			};
		},
		mounted: function() {
			this.$http.get('api/v2/groups/' + this.gid).then(function(response) {
				this.grouphead = response.body.Head
				this.grouplinks = response.body.Links
				this.groupsize = response.body.Size
			});
		},
	};

	let roster = new Vue({
		el: '#roster',
		delimiters: ['${', '}'],
		data: {
			groups: [],
			active: "",
		},
		mounted: function() {
			this.$http.get('/api/v2/groups').then(function(response) {
				this.groups = response.body;
			});
		},
		methods: {
			showDetails: function(group) {
				this.active = group
			},
		},
		components: {
			'group-info': GroupInfo,
			'group-details': GroupDetails,
		},
	});
</script>

{{JS "/static/js/jquery.dataTables.min.js"}}
{{template "footer" .}}{{end}}
{{define "foot"}}{{end}}